{"ast":null,"code":"var _jsxFileName = \"/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/pages/updateProduct/updateProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./updateProduct.css\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport UploadProducts from \"../../components/UploadProducts/UploadProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 날짜/시간 포맷 함수 (예: 2025-01-31 13:45:59)\n  const formatDateTime = dateString => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleString(\"ko-KR\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n  };\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"https://glowshelfe-inventory.onrender.com/api\";\n        const response = await fetch(`${API_BASE_URL}/products/${id}`);\n        if (!response.ok) throw new Error(\"Failed to fetch product\");\n        const data = await response.json();\n        setProduct(data);\n      } catch (error) {\n        setError(error.message);\n        console.error(\"Error fetching product:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProduct();\n  }, [id]);\n  const handleChange = e => {\n    setProduct({\n      ...product,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`https://glowshelfe-inventory.onrender.com/api/products/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(product)\n      });\n      if (!response.ok) throw new Error(\"Failed to update product\");\n      alert(\"Product updated successfully!\");\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Error updating product: \" + error.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"update-product__message\",\n    children: \"Loading product data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"update-product__message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 21\n  }, this);\n  if (!product) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"update-product__message\",\n    children: \"Error loading product data.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-product__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"update-product__title\",\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"update-product__form\",\n      onSubmit: handleSubmit,\n      children: [Object.keys(product).map(key => {\n        // _id 필드는 수정하지 않으므로 표시 X\n        if (key === \"_id\") return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-group__label\",\n            htmlFor: key,\n            children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), key === \"createdAt\" || key === \"updatedAt\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-group__input\",\n            type: \"text\",\n            id: key,\n            name: key,\n            value: formatDateTime(product[key]),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-group__input\",\n            type: key === \"quantity\" ? \"number\" : key === \"expirationDate\" ? \"date\" : \"text\",\n            id: key,\n            name: key\n            // --- placeholder, maxLength, min 등 추가 ---\n            ,\n            placeholder: key === \"brand\" || key === \"category\" || key === \"location\" ? \"2 to 50 characters\" : key === \"quantity\" ? \"Min 1 number\" : key === \"product\" ? \"2 to 70 characters\" : \"Error\",\n            maxLength: key === \"brand\" || key === \"category\" || key === \"location\" ? 50 : key === \"product\" ? 70 : undefined\n            // 숫자 타입이 아닌 경우 min은 효과가 없습니다. 필요시 minLength로 변경하세요.\n            ,\n            minLength: key === \"brand\" || key === \"category\" || key === \"location\" ? 2 : key === \"product\" ? 2 : undefined,\n            value: key === \"expirationDate\" ? product.expirationDate ? new Date(product.expirationDate).toISOString().slice(0, 10) // \"YYYY-MM-DD\" 형태\n            : \"\" : product[key] || \"\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-actions__submit\",\n          type: \"submit\",\n          children: \"Update Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"form-actions__back\",\n          to: \"/\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"MlhkRI+5gRNO6zTc0As0D30AT9E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","UploadProducts","jsxDEV","_jsxDEV","UpdateProduct","_s","id","navigate","product","setProduct","loading","setLoading","error","setError","formatDateTime","dateString","date","Date","toLocaleString","year","month","day","hour","minute","second","fetchProduct","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","response","fetch","ok","Error","data","json","message","console","handleChange","e","target","name","value","handleSubmit","preventDefault","token","localStorage","getItem","method","headers","Authorization","body","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","charAt","toUpperCase","slice","type","readOnly","placeholder","maxLength","undefined","minLength","expirationDate","toISOString","onChange","required","to","_c","$RefreshReg$"],"sources":["/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/pages/updateProduct/updateProduct.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./updateProduct.css\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport UploadProducts from \"../../components/UploadProducts/UploadProducts\";\n\nconst UpdateProduct = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 날짜/시간 포맷 함수 (예: 2025-01-31 13:45:59)\n  const formatDateTime = (dateString) => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleString(\"ko-KR\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    });\n  };\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const API_BASE_URL =\n          process.env.REACT_APP_API_BASE_URL ||\n          \"https://glowshelfe-inventory.onrender.com/api\";\n\n        const response = await fetch(`${API_BASE_URL}/products/${id}`);\n        if (!response.ok) throw new Error(\"Failed to fetch product\");\n\n        const data = await response.json();\n        setProduct(data);\n      } catch (error) {\n        setError(error.message);\n        console.error(\"Error fetching product:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProduct();\n  }, [id]);\n\n  const handleChange = (e) => {\n    setProduct({\n      ...product,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\n        `https://glowshelfe-inventory.onrender.com/api/products/${id}`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify(product),\n        }\n      );\n\n      if (!response.ok) throw new Error(\"Failed to update product\");\n\n      alert(\"Product updated successfully!\");\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Error updating product: \" + error.message);\n    }\n  };\n\n  if (loading)\n    return <p className=\"update-product__message\">Loading product data...</p>;\n  if (error) return <p className=\"update-product__message\">{error}</p>;\n  if (!product)\n    return (\n      <p className=\"update-product__message\">Error loading product data.</p>\n    );\n\n  return (\n    <div className=\"update-product__container\">\n      <h2 className=\"update-product__title\">Update Product</h2>\n      <form className=\"update-product__form\" onSubmit={handleSubmit}>\n        {/* 폼 필드들 동적 렌더링 */}\n        {Object.keys(product).map((key) => {\n          // _id 필드는 수정하지 않으므로 표시 X\n          if (key === \"_id\") return null;\n\n          return (\n            <div className=\"form-group\" key={key}>\n              <label className=\"form-group__label\" htmlFor={key}>\n                {key.charAt(0).toUpperCase() + key.slice(1)}:\n              </label>\n\n              {/* createdAt, updatedAt은 readOnly, expirationDate는 날짜, quantity(QTY)는 숫자 */}\n              {key === \"createdAt\" || key === \"updatedAt\" ? (\n                <input\n                  className=\"form-group__input\"\n                  type=\"text\"\n                  id={key}\n                  name={key}\n                  value={formatDateTime(product[key])}\n                  readOnly\n                />\n              ) : (\n                <input\n                  className=\"form-group__input\"\n                  type={\n                    key === \"quantity\"\n                      ? \"number\"\n                      : key === \"expirationDate\"\n                      ? \"date\"\n                      : \"text\"\n                  }\n                  id={key}\n                  name={key}\n                  // --- placeholder, maxLength, min 등 추가 ---\n                  placeholder={\n                    key === \"brand\" || key === \"category\" || key === \"location\"\n                      ? \"2 to 50 characters\"\n                      : key === \"quantity\"\n                      ? \"Min 1 number\"\n                      : key === \"product\"\n                      ? \"2 to 70 characters\"\n                      : \"Error\"\n                  }\n                  maxLength={\n                    key === \"brand\" || key === \"category\" || key === \"location\"\n                      ? 50\n                      : key === \"product\"\n                      ? 70\n                      : undefined\n                  }\n                  // 숫자 타입이 아닌 경우 min은 효과가 없습니다. 필요시 minLength로 변경하세요.\n                  minLength={\n                    key === \"brand\" || key === \"category\" || key === \"location\"\n                      ? 2\n                      : key === \"product\"\n                      ? 2\n                      : undefined\n                  }\n                  value={\n                    key === \"expirationDate\"\n                      ? product.expirationDate\n                        ? new Date(product.expirationDate)\n                            .toISOString()\n                            .slice(0, 10) // \"YYYY-MM-DD\" 형태\n                        : \"\"\n                      : product[key] || \"\"\n                  }\n                  onChange={handleChange}\n                  required\n                />\n              )}\n            </div>\n          );\n        })}\n\n        <div className=\"form-actions\">\n          <button className=\"form-actions__submit\" type=\"submit\">\n            Update Product\n          </button>\n          <Link className=\"form-actions__back\" to=\"/\">\n            Back\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateProduct;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}