{"ast":null,"code":"var _jsxFileName = \"/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/components/UploadProducts/UploadProducts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadProducts = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      setMessage(\"파일을 선택해주세요.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"https://glowshelfe-inventory.onrender.com/api/products/upload\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) throw new Error(\"업로드 실패\");\n      const data = await response.json();\n      setMessage(\"제품 업로드 성공!\");\n    } catch (error) {\n      setMessage(\"에러 발생: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC81C\\uD488 \\uC815\\uBCF4 \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx, .xls\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadProducts, \"90rxx89DAeVfO1aRLt0hivI8MC0=\");\n_c = UploadProducts;\nexport default UploadProducts;\nvar _c;\n$RefreshReg$(_c, \"UploadProducts\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadProducts","_s","file","setFile","message","setMessage","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","ok","Error","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/components/UploadProducts/UploadProducts.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst UploadProducts = () => {\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    if (!file) {\n      setMessage(\"파일을 선택해주세요.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\n        \"https://glowshelfe-inventory.onrender.com/api/products/upload\",\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: formData,\n        }\n      );\n\n      if (!response.ok) throw new Error(\"업로드 실패\");\n      const data = await response.json();\n      setMessage(\"제품 업로드 성공!\");\n    } catch (error) {\n      setMessage(\"에러 발생: \" + error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>제품 정보 업로드</h2>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileChange} />\n        <button type=\"submit\">업로드</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default UploadProducts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACT,IAAI,EAAE;MACTG,UAAU,CAAC,aAAa,CAAC;MACzB;IACF;IACA,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAA+D,EAC/D;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK;QAChC,CAAC;QACDQ,IAAI,EAAEX;MACR,CACF,CAAC;MAED,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC3C,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCtB,UAAU,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdvB,UAAU,CAAC,SAAS,GAAGuB,KAAK,CAACxB,OAAO,CAAC;IACvC;EACF,CAAC;EAED,oBACEL,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlC,OAAA;MAAMmC,QAAQ,EAAExB,YAAa;MAAAmB,QAAA,gBAC3B9B,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,aAAa;QAACC,QAAQ,EAAE/B;MAAiB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtElC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACN7B,OAAO,iBAAIL,OAAA;MAAA8B,QAAA,EAAIzB;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAChC,EAAA,CAhDID,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}