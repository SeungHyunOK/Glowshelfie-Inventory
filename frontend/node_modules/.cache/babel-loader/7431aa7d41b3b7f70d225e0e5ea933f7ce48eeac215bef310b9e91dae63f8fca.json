{"ast":null,"code":"var _jsxFileName = \"/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/pages/productsList/productsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport SearchControls from \"../../components/ProductsList/SearchControls\";\nimport ProductTable from \"../../components/ProductsList/ProductTable\";\nimport Pagination from \"../../components/ProductsList/Pagination\";\nimport \"./productsList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [expandedRows, setExpandedRows] = useState({});\n  const [fields] = useState([\"Brand\", \"Category\", \"Product\", \"Location\"]);\n  const [selectedField, setSelectedField] = useState(\"Brand\");\n  const [tempSearchTerm, setTempSearchTerm] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortMode, setSortMode] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const itemsPerPage = 10;\n\n  // 로그인 상태 복구\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  // sortMode 유지\n  useEffect(() => {\n    const savedSortMode = localStorage.getItem(\"sortMode\");\n    if (savedSortMode) {\n      setSortMode(savedSortMode);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"sortMode\", sortMode);\n  }, [sortMode]);\n\n  // 제품 데이터 fetch\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setLoading(true);\n      try {\n        const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"https://glowshelfe-inventory.onrender.com/api\";\n        const response = await fetch(`${API_BASE_URL}/products`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch products\");\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setProducts(data);\n        } else {\n          console.error(\"API 응답이 배열이 아닙니다:\", data);\n          setProducts([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // 검색 필터링 처리\n  const filteredProducts = products.filter(product => {\n    if (!searchTerm) return true;\n    const fieldKey = selectedField.toLowerCase();\n    const fieldValue = product[fieldKey] ? String(product[fieldKey]) : \"\";\n    return fieldValue.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  // 정렬 로직: sortMode 값에서 정렬 옵션(예:\"brandAsc\", \"createdDesc\" 등)을 추출하여 정렬\n  const sortByMode = useCallback((a, b) => {\n    if (!sortMode) return 0;\n    const isAsc = sortMode.endsWith(\"Asc\");\n    // Determine suffix length: 'Asc' is 3 chars, 'Desc' is 4 chars\n    const suffixLength = isAsc ? 3 : sortMode.endsWith(\"Desc\") ? 4 : 0;\n    const rawField = sortMode.slice(0, -suffixLength).toLowerCase();\n    // 매핑: 옵션의 rawField를 실제 데이터 필드명으로 변환\n    const fieldMap = {\n      created: \"createdAt\",\n      updated: \"updatedAt\",\n      expiration: \"expirationDate\",\n      brand: \"brand\",\n      category: \"category\",\n      product: \"product\",\n      location: \"location\",\n      quantity: \"quantity\"\n    };\n    const sortField = fieldMap[rawField] || rawField;\n    let fieldA = a[sortField] || \"\";\n    let fieldB = b[sortField] || \"\";\n\n    // 날짜 필드 처리\n    if ((sortField === \"createdAt\" || sortField === \"updatedAt\" || sortField === \"expirationDate\") && fieldA && fieldB) {\n      fieldA = new Date(fieldA);\n      fieldB = new Date(fieldB);\n    }\n    // 숫자 비교\n    if (typeof fieldA === \"number\" && typeof fieldB === \"number\") {\n      return isAsc ? fieldA - fieldB : fieldB - fieldA;\n    }\n    if (fieldA instanceof Date && fieldB instanceof Date) {\n      return isAsc ? fieldA.getTime() - fieldB.getTime() : fieldB.getTime() - fieldA.getTime();\n    }\n    if (!isNaN(Number(fieldA)) && !isNaN(Number(fieldB))) {\n      fieldA = Number(fieldA);\n      fieldB = Number(fieldB);\n      return isAsc ? fieldA - fieldB : fieldB - fieldA;\n    }\n    if (typeof fieldA === \"string\" && typeof fieldB === \"string\") {\n      return isAsc ? fieldA.localeCompare(fieldB) : fieldB.localeCompare(fieldA);\n    }\n    fieldA = String(fieldA);\n    fieldB = String(fieldB);\n    return isAsc ? fieldA.localeCompare(fieldB) : fieldB.localeCompare(fieldA);\n  }, [sortMode]);\n  const sortedProducts = useMemo(() => {\n    return sortMode ? [...filteredProducts].sort(sortByMode) : filteredProducts;\n  }, [filteredProducts, sortMode, sortByMode]);\n\n  // 페이지네이션 처리\n  const totalPages = Math.ceil(sortedProducts.length / itemsPerPage);\n  const currentProducts = sortedProducts.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n  // 행 확장 토글\n  const toggleExpand = id => {\n    setExpandedRows(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  // 로그인, 삭제, 검색 등 기타 핸들러는 기존 코드 유지\n  const handleLogin = async e => {\n    e.preventDefault();\n    const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"https://glowshelfe-inventory.onrender.com/api\";\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: loginUsername,\n          password: loginPassword\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setLoggedIn(true);\n        localStorage.setItem(\"authToken\", data.token);\n      } else {\n        alert(\"Invalid login information.\");\n      }\n    } catch (error) {\n      alert(\"Error during login: \" + error.message);\n    }\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n  };\n  const handleDelete = async id => {\n    if (!loggedIn) {\n      alert(\"You need to log in.\");\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to delete it?\")) return;\n    setLoading(true);\n    try {\n      const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"https://glowshelfe-inventory.onrender.com/api\";\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`${API_BASE_URL}/products/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete product\");\n      }\n      setProducts(prev => prev.filter(product => product._id !== id));\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    setSearchTerm(tempSearchTerm.trim());\n    setCurrentPage(1);\n  };\n  const handleSearchReset = () => {\n    setTempSearchTerm(\"\");\n    setSearchTerm(\"\");\n    setCurrentPage(1);\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  const goToPrevPage = () => {\n    if (currentPage > 1) setCurrentPage(prev => prev - 1);\n  };\n  const goToNextPage = () => {\n    if (currentPage < totalPages) setCurrentPage(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productList-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Glowshelfie Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"This is Glowshelfie Products List.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/main.webp\",\n        alt: \"mainImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Products List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-section\",\n      children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: loginUsername,\n          onChange: e => setLoginUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: loginPassword,\n          onChange: e => setLoginPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchControls, {\n      fields: fields,\n      selectedField: selectedField,\n      setSelectedField: setSelectedField,\n      tempSearchTerm: tempSearchTerm,\n      setTempSearchTerm: setTempSearchTerm,\n      handleKeyDown: handleKeyDown,\n      handleSearch: handleSearch,\n      handleSearchReset: handleSearchReset,\n      sortMode: sortMode,\n      setSortMode: setSortMode,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage,\n      loggedIn: loggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductTable, {\n      products: currentProducts,\n      loading: loading,\n      expandedRows: expandedRows,\n      toggleExpand: toggleExpand,\n      handleDelete: handleDelete,\n      loggedIn: loggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      goToPrevPage: goToPrevPage,\n      goToNextPage: goToNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsList, \"n2IlA/ccIDf+HvuTBAW0W2EZ7FA=\");\n_c = ProductsList;\nexport default ProductsList;\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Helmet","SearchControls","ProductTable","Pagination","jsxDEV","_jsxDEV","ProductsList","_s","products","setProducts","loading","setLoading","expandedRows","setExpandedRows","fields","selectedField","setSelectedField","tempSearchTerm","setTempSearchTerm","searchTerm","setSearchTerm","sortMode","setSortMode","currentPage","setCurrentPage","loggedIn","setLoggedIn","loginUsername","setLoginUsername","loginPassword","setLoginPassword","itemsPerPage","token","localStorage","getItem","savedSortMode","setItem","fetchProducts","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","response","fetch","ok","Error","data","json","Array","isArray","console","error","filteredProducts","filter","product","fieldKey","toLowerCase","fieldValue","String","includes","sortByMode","a","b","isAsc","endsWith","suffixLength","rawField","slice","fieldMap","created","updated","expiration","brand","category","location","quantity","sortField","fieldA","fieldB","Date","getTime","isNaN","Number","localeCompare","sortedProducts","sort","totalPages","Math","ceil","length","currentProducts","toggleExpand","id","prev","handleLogin","e","preventDefault","method","headers","body","JSON","stringify","username","password","alert","message","handleLogout","handleDelete","window","confirm","Authorization","_id","handleSearch","trim","handleSearchReset","handleKeyDown","key","goToPrevPage","goToNextPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","content","src","alt","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/pages/productsList/productsList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport SearchControls from \"../../components/ProductsList/SearchControls\";\nimport ProductTable from \"../../components/ProductsList/ProductTable\";\nimport Pagination from \"../../components/ProductsList/Pagination\";\nimport \"./productsList.css\";\n\nconst ProductsList = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [expandedRows, setExpandedRows] = useState({});\n  const [fields] = useState([\"Brand\", \"Category\", \"Product\", \"Location\"]);\n  const [selectedField, setSelectedField] = useState(\"Brand\");\n  const [tempSearchTerm, setTempSearchTerm] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortMode, setSortMode] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const itemsPerPage = 10;\n\n  // 로그인 상태 복구\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  // sortMode 유지\n  useEffect(() => {\n    const savedSortMode = localStorage.getItem(\"sortMode\");\n    if (savedSortMode) {\n      setSortMode(savedSortMode);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"sortMode\", sortMode);\n  }, [sortMode]);\n\n  // 제품 데이터 fetch\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setLoading(true);\n      try {\n        const API_BASE_URL =\n          process.env.REACT_APP_API_BASE_URL ||\n          \"https://glowshelfe-inventory.onrender.com/api\";\n        const response = await fetch(`${API_BASE_URL}/products`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch products\");\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setProducts(data);\n        } else {\n          console.error(\"API 응답이 배열이 아닙니다:\", data);\n          setProducts([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  // 검색 필터링 처리\n  const filteredProducts = products.filter((product) => {\n    if (!searchTerm) return true;\n    const fieldKey = selectedField.toLowerCase();\n    const fieldValue = product[fieldKey] ? String(product[fieldKey]) : \"\";\n    return fieldValue.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  // 정렬 로직: sortMode 값에서 정렬 옵션(예:\"brandAsc\", \"createdDesc\" 등)을 추출하여 정렬\n  const sortByMode = useCallback(\n    (a, b) => {\n      if (!sortMode) return 0;\n      const isAsc = sortMode.endsWith(\"Asc\");\n      // Determine suffix length: 'Asc' is 3 chars, 'Desc' is 4 chars\n      const suffixLength = isAsc ? 3 : sortMode.endsWith(\"Desc\") ? 4 : 0;\n      const rawField = sortMode.slice(0, -suffixLength).toLowerCase();\n      // 매핑: 옵션의 rawField를 실제 데이터 필드명으로 변환\n      const fieldMap = {\n        created: \"createdAt\",\n        updated: \"updatedAt\",\n        expiration: \"expirationDate\",\n        brand: \"brand\",\n        category: \"category\",\n        product: \"product\",\n        location: \"location\",\n        quantity: \"quantity\",\n      };\n      const sortField = fieldMap[rawField] || rawField;\n      let fieldA = a[sortField] || \"\";\n      let fieldB = b[sortField] || \"\";\n\n      // 날짜 필드 처리\n      if (\n        (sortField === \"createdAt\" ||\n          sortField === \"updatedAt\" ||\n          sortField === \"expirationDate\") &&\n        fieldA &&\n        fieldB\n      ) {\n        fieldA = new Date(fieldA);\n        fieldB = new Date(fieldB);\n      }\n      // 숫자 비교\n      if (typeof fieldA === \"number\" && typeof fieldB === \"number\") {\n        return isAsc ? fieldA - fieldB : fieldB - fieldA;\n      }\n      if (fieldA instanceof Date && fieldB instanceof Date) {\n        return isAsc\n          ? fieldA.getTime() - fieldB.getTime()\n          : fieldB.getTime() - fieldA.getTime();\n      }\n      if (!isNaN(Number(fieldA)) && !isNaN(Number(fieldB))) {\n        fieldA = Number(fieldA);\n        fieldB = Number(fieldB);\n        return isAsc ? fieldA - fieldB : fieldB - fieldA;\n      }\n      if (typeof fieldA === \"string\" && typeof fieldB === \"string\") {\n        return isAsc\n          ? fieldA.localeCompare(fieldB)\n          : fieldB.localeCompare(fieldA);\n      }\n      fieldA = String(fieldA);\n      fieldB = String(fieldB);\n      return isAsc\n        ? fieldA.localeCompare(fieldB)\n        : fieldB.localeCompare(fieldA);\n    },\n    [sortMode]\n  );\n\n  const sortedProducts = useMemo(() => {\n    return sortMode ? [...filteredProducts].sort(sortByMode) : filteredProducts;\n  }, [filteredProducts, sortMode, sortByMode]);\n\n  // 페이지네이션 처리\n  const totalPages = Math.ceil(sortedProducts.length / itemsPerPage);\n  const currentProducts = sortedProducts.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // 행 확장 토글\n  const toggleExpand = (id) => {\n    setExpandedRows((prev) => ({\n      ...prev,\n      [id]: !prev[id],\n    }));\n  };\n\n  // 로그인, 삭제, 검색 등 기타 핸들러는 기존 코드 유지\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const API_BASE_URL =\n      process.env.REACT_APP_API_BASE_URL ||\n      \"https://glowshelfe-inventory.onrender.com/api\";\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: loginUsername,\n          password: loginPassword,\n        }),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setLoggedIn(true);\n        localStorage.setItem(\"authToken\", data.token);\n      } else {\n        alert(\"Invalid login information.\");\n      }\n    } catch (error) {\n      alert(\"Error during login: \" + error.message);\n    }\n  };\n\n  const handleLogout = () => {\n    setLoggedIn(false);\n  };\n\n  const handleDelete = async (id) => {\n    if (!loggedIn) {\n      alert(\"You need to log in.\");\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to delete it?\")) return;\n    setLoading(true);\n    try {\n      const API_BASE_URL =\n        process.env.REACT_APP_API_BASE_URL ||\n        \"https://glowshelfe-inventory.onrender.com/api\";\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`${API_BASE_URL}/products/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete product\");\n      }\n      setProducts((prev) => prev.filter((product) => product._id !== id));\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    setSearchTerm(tempSearchTerm.trim());\n    setCurrentPage(1);\n  };\n\n  const handleSearchReset = () => {\n    setTempSearchTerm(\"\");\n    setSearchTerm(\"\");\n    setCurrentPage(1);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  const goToPrevPage = () => {\n    if (currentPage > 1) setCurrentPage((prev) => prev - 1);\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < totalPages) setCurrentPage((prev) => prev + 1);\n  };\n\n  return (\n    <div className=\"productList-container\">\n      <Helmet>\n        <title>Glowshelfie Products</title>\n        <meta name=\"description\" content=\"This is Glowshelfie Products List.\" />\n      </Helmet>\n      <div className=\"title\">\n        <img src=\"/images/main.webp\" alt=\"mainImage\" />\n        <h1>Products List</h1>\n      </div>\n      <div className=\"login-section\">\n        {!loggedIn ? (\n          <form onSubmit={handleLogin} className=\"login-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={loginUsername}\n              onChange={(e) => setLoginUsername(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={loginPassword}\n              onChange={(e) => setLoginPassword(e.target.value)}\n            />\n            <button type=\"submit\">Login</button>\n          </form>\n        ) : (\n          <button onClick={handleLogout}>Logout</button>\n        )}\n      </div>\n      <SearchControls\n        fields={fields}\n        selectedField={selectedField}\n        setSelectedField={setSelectedField}\n        tempSearchTerm={tempSearchTerm}\n        setTempSearchTerm={setTempSearchTerm}\n        handleKeyDown={handleKeyDown}\n        handleSearch={handleSearch}\n        handleSearchReset={handleSearchReset}\n        sortMode={sortMode}\n        setSortMode={setSortMode}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        loggedIn={loggedIn}\n      />\n      <ProductTable\n        products={currentProducts}\n        loading={loading}\n        expandedRows={expandedRows}\n        toggleExpand={toggleExpand}\n        handleDelete={handleDelete}\n        loggedIn={loggedIn}\n      />\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        goToPrevPage={goToPrevPage}\n        goToNextPage={goToNextPage}\n      />\n    </div>\n  );\n};\n\nexport default ProductsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}