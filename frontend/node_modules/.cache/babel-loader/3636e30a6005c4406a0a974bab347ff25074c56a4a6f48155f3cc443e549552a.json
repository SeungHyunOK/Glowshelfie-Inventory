{"ast":null,"code":"var _jsxFileName = \"/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/pages/productsList/productsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport SearchControls from \"../../components/ProductsList/SearchControls\";\nimport ProductTable from \"../../components/ProductsList/ProductTable\";\nimport Pagination from \"../../components/ProductsList/Pagination\";\nimport \"./productsList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [expandedRows, setExpandedRows] = useState({});\n  const [fields] = useState([\"brand\", \"category\", \"product\", \"location\"]);\n  const [selectedField, setSelectedField] = useState(\"brand\");\n  const [tempSearchTerm, setTempSearchTerm] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortMode, setSortMode] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [authToken, setAuthToken] = useState(\"\");\n  const [showLogin, setShowLogin] = useState(false);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setLoading(true);\n      try {\n        const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001/api\";\n        const response = await fetch(`${API_BASE_URL}/products`, {\n          headers: {\n            Authorization: authToken ? `Bearer ${authToken}` : \"\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch products\");\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setProducts(data);\n        } else {\n          console.error(\"API 응답이 배열이 아닙니다:\", data);\n          setProducts([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, [authToken]);\n  const filteredProducts = products.filter(product => {\n    if (!searchTerm) return true;\n    const fieldValue = product[selectedField] ? String(product[selectedField]) : \"\";\n    return fieldValue.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  const sortByMode = (a, b) => {\n    if (!sortMode) return 0;\n    const fieldA = a[selectedField] ? String(a[selectedField]) : \"\";\n    const fieldB = b[selectedField] ? String(b[selectedField]) : \"\";\n    // 예시: sortMode가 \"brandAsc\", \"brandDesc\" 등의 형태라고 가정\n    if (sortMode.endsWith(\"Asc\")) {\n      return fieldA.localeCompare(fieldB);\n    } else if (sortMode.endsWith(\"Desc\")) {\n      return fieldB.localeCompare(fieldA);\n    }\n    return 0;\n  };\n  const sortedProducts = sortMode ? [...filteredProducts].sort(sortByMode) : filteredProducts;\n\n  // 페이지네이션 처리\n  const totalPages = Math.ceil(sortedProducts.length / itemsPerPage);\n  const currentProducts = sortedProducts.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n  // 행 확장/축소 토글\n  const toggleExpand = id => {\n    setExpandedRows(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  // const handleUpdate = async (id) => {\n  //   if (!isLoggedIn) {\n  //     alert(\"로그인이 필요합니다.\");\n  //     return;\n  //   }\n  // };\n  // 제품 삭제 함수\n  const handleDelete = async id => {\n    if (!isLoggedIn) {\n      alert(\"로그인이 필요합니다.\");\n      return;\n    }\n    if (!window.confirm(\"정말 삭제하시겠습니까?\")) return;\n    setLoading(true);\n    try {\n      const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001/api\";\n      const response = await fetch(`${API_BASE_URL}/products/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete product\");\n      }\n      // 삭제 후 제품 목록 갱신\n      setProducts(prev => prev.filter(product => product._id !== id));\n    } catch (error) {\n      alert(\"삭제 중 오류 발생: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    setSearchTerm(tempSearchTerm.trim());\n    setCurrentPage(1);\n  };\n  const handleSearchReset = () => {\n    setTempSearchTerm(\"\");\n    setSearchTerm(\"\");\n    setCurrentPage(1);\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // 페이지네이션 핸들러\n  const goToPrevPage = () => {\n    if (currentPage > 1) setCurrentPage(prev => prev - 1);\n  };\n  const goToNextPage = () => {\n    if (currentPage < totalPages) setCurrentPage(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productList-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Glowshelfie Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"This is Glowshelfie Products List.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Products List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), showLogin && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchControls, {\n      fields: fields,\n      selectedField: selectedField,\n      setSelectedField: setSelectedField,\n      tempSearchTerm: tempSearchTerm,\n      setTempSearchTerm: setTempSearchTerm,\n      handleKeyDown: handleKeyDown,\n      handleSearch: handleSearch,\n      handleSearchReset: handleSearchReset,\n      sortMode: sortMode,\n      setSortMode: setSortMode,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/AddProduct\",\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductTable, {\n      products: currentProducts,\n      loading: loading,\n      expandedRows: expandedRows,\n      toggleExpand: toggleExpand,\n      handleDelete: handleDelete,\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      goToPrevPage: goToPrevPage,\n      goToNextPage: goToNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsList, \"qVVviBc7gJyQ35eON/sDJp5JxRE=\");\n_c = ProductsList;\nexport default ProductsList;\nvar _c;\n$RefreshReg$(_c, \"ProductsList\");","map":{"version":3,"names":["React","useState","useEffect","Helmet","Link","SearchControls","ProductTable","Pagination","jsxDEV","_jsxDEV","ProductsList","_s","products","setProducts","loading","setLoading","expandedRows","setExpandedRows","fields","selectedField","setSelectedField","tempSearchTerm","setTempSearchTerm","searchTerm","setSearchTerm","sortMode","setSortMode","currentPage","setCurrentPage","itemsPerPage","isLoggedIn","setIsLoggedIn","authToken","setAuthToken","showLogin","setShowLogin","fetchProducts","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","response","fetch","headers","Authorization","ok","Error","data","json","Array","isArray","console","error","filteredProducts","filter","product","fieldValue","String","toLowerCase","includes","sortByMode","a","b","fieldA","fieldB","endsWith","localeCompare","sortedProducts","sort","totalPages","Math","ceil","length","currentProducts","slice","toggleExpand","id","prev","handleDelete","alert","window","confirm","method","_id","message","handleSearch","trim","handleSearchReset","handleKeyDown","e","key","goToPrevPage","goToNextPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","content","onClick","handleLogout","goLogin","Login","onLogin","handleLogin","to","_c","$RefreshReg$"],"sources":["/Users/ok/Documents/OK/Project/glowshelfieInven/frontend/src/pages/productsList/productsList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport SearchControls from \"../../components/ProductsList/SearchControls\";\nimport ProductTable from \"../../components/ProductsList/ProductTable\";\nimport Pagination from \"../../components/ProductsList/Pagination\";\nimport \"./productsList.css\";\n\nconst ProductsList = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [expandedRows, setExpandedRows] = useState({});\n  const [fields] = useState([\"brand\", \"category\", \"product\", \"location\"]);\n  const [selectedField, setSelectedField] = useState(\"brand\");\n  const [tempSearchTerm, setTempSearchTerm] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortMode, setSortMode] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [authToken, setAuthToken] = useState(\"\");\n  const [showLogin, setShowLogin] = useState(false);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setLoading(true);\n      try {\n        const API_BASE_URL =\n          process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001/api\";\n        const response = await fetch(`${API_BASE_URL}/products`, {\n          headers: {\n            Authorization: authToken ? `Bearer ${authToken}` : \"\",\n          },\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch products\");\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setProducts(data);\n        } else {\n          console.error(\"API 응답이 배열이 아닙니다:\", data);\n          setProducts([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProducts();\n  }, [authToken]);\n\n  const filteredProducts = products.filter((product) => {\n    if (!searchTerm) return true;\n    const fieldValue = product[selectedField]\n      ? String(product[selectedField])\n      : \"\";\n    return fieldValue.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  const sortByMode = (a, b) => {\n    if (!sortMode) return 0;\n    const fieldA = a[selectedField] ? String(a[selectedField]) : \"\";\n    const fieldB = b[selectedField] ? String(b[selectedField]) : \"\";\n    // 예시: sortMode가 \"brandAsc\", \"brandDesc\" 등의 형태라고 가정\n    if (sortMode.endsWith(\"Asc\")) {\n      return fieldA.localeCompare(fieldB);\n    } else if (sortMode.endsWith(\"Desc\")) {\n      return fieldB.localeCompare(fieldA);\n    }\n    return 0;\n  };\n  const sortedProducts = sortMode\n    ? [...filteredProducts].sort(sortByMode)\n    : filteredProducts;\n\n  // 페이지네이션 처리\n  const totalPages = Math.ceil(sortedProducts.length / itemsPerPage);\n  const currentProducts = sortedProducts.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // 행 확장/축소 토글\n  const toggleExpand = (id) => {\n    setExpandedRows((prev) => ({\n      ...prev,\n      [id]: !prev[id],\n    }));\n  };\n\n  // const handleUpdate = async (id) => {\n  //   if (!isLoggedIn) {\n  //     alert(\"로그인이 필요합니다.\");\n  //     return;\n  //   }\n  // };\n  // 제품 삭제 함수\n  const handleDelete = async (id) => {\n    if (!isLoggedIn) {\n      alert(\"로그인이 필요합니다.\");\n      return;\n    }\n    if (!window.confirm(\"정말 삭제하시겠습니까?\")) return;\n    setLoading(true);\n    try {\n      const API_BASE_URL =\n        process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001/api\";\n      const response = await fetch(`${API_BASE_URL}/products/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete product\");\n      }\n      // 삭제 후 제품 목록 갱신\n      setProducts((prev) => prev.filter((product) => product._id !== id));\n    } catch (error) {\n      alert(\"삭제 중 오류 발생: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    setSearchTerm(tempSearchTerm.trim());\n    setCurrentPage(1);\n  };\n\n  const handleSearchReset = () => {\n    setTempSearchTerm(\"\");\n    setSearchTerm(\"\");\n    setCurrentPage(1);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // 페이지네이션 핸들러\n  const goToPrevPage = () => {\n    if (currentPage > 1) setCurrentPage((prev) => prev - 1);\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < totalPages) setCurrentPage((prev) => prev + 1);\n  };\n\n  return (\n    <div className=\"productList-container\">\n      <Helmet>\n        <title>Glowshelfie Products</title>\n        <meta name=\"description\" content=\"This is Glowshelfie Products List.\" />\n      </Helmet>\n      <h1 className=\"title\">Products List</h1>\n\n      {/* 로그인 / 로그아웃 영역 */}\n      <div>\n        {isLoggedIn ? (\n          <button onClick={handleLogout}>Logout</button>\n        ) : (\n          <div>\n            <button onClick={goLogin}>Login</button>\n            {showLogin && <Login onLogin={handleLogin} />}\n          </div>\n        )}\n      </div>\n\n      {/* 검색 및 정렬 컨트롤 */}\n      <SearchControls\n        fields={fields}\n        selectedField={selectedField}\n        setSelectedField={setSelectedField}\n        tempSearchTerm={tempSearchTerm}\n        setTempSearchTerm={setTempSearchTerm}\n        handleKeyDown={handleKeyDown}\n        handleSearch={handleSearch}\n        handleSearchReset={handleSearchReset}\n        sortMode={sortMode}\n        setSortMode={setSortMode}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n\n      {/* 제품 추가 페이지 링크 */}\n      <Link to=\"/AddProduct\">Add Product</Link>\n\n      {/* 제품 테이블 */}\n      <ProductTable\n        products={currentProducts}\n        loading={loading}\n        expandedRows={expandedRows}\n        toggleExpand={toggleExpand}\n        handleDelete={handleDelete}\n        isLoggedIn={isLoggedIn}\n      />\n\n      {/* 페이지네이션 */}\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        goToPrevPage={goToPrevPage}\n        goToNextPage={goToNextPage}\n      />\n    </div>\n  );\n};\n\nexport default ProductsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}